/*
Given an array A of size N containing 0s, 1s, and 2s; you need to sort the array in ascending order.

Input:
The first line contains an integer 'T' denoting the total number of test cases. Then T testcases follow. Each testcases contains two lines of input. The first line denotes the size of the array N. The second lines contains the elements of the array A separated by spaces.

Output: 
For each testcase, print the sorted array.

Constraints:
1 <= T <= 500
1 <= N <= 106
0 <= Ai <= 2

Example:
Input :
2
5
0 2 1 2 0
3
0 1 0

Output:
0 0 1 2 2
0 0 1

Explanation:
Testcase 1: After segragating the 0s, 1s and 2s, we have 0 0 1 2 2 which shown in the output.

*/

/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) {
		
		Scanner sc=new Scanner(System.in);
		
		int test_cases=sc.nextInt();
		
		while(test_cases > 0)
		{
		    int n=sc.nextInt();
		    
		    int ar[]=new int[n];
		    
		    for(int i=0;i<n;i++)
		    {
		        ar[i]=sc.nextInt();
		    }
		    sortArray(ar);
		    test_cases--;
		}
	}
	public static void sortArray(int arr[])
	{
	   int i, cnt0 = 0, cnt1 = 0, cnt2 = 0; 
      
        // Count the number of 0s, 1s and 2s in the array 
        for (i = 0; i < arr.length; i++) { 
           if(arr[i]==0)
           cnt0++;
           else if(arr[i]==1)
           cnt1++;
           else
           cnt2++;
        } 
      
        i = 0; 
  
        while (cnt0 > 0) { 
            arr[i++] = 0; 
            cnt0--; 
        } 
        while (cnt1 > 0) { 
            arr[i++] = 1; 
            cnt1--; 
        } 
        while (cnt2 > 0) { 
            arr[i++] = 2; 
            cnt2--; 
        } 
      
        for(int k=0;k<arr.length;k++)
        System.out.print(arr[k]+" ");
        System.out.println();
	}
}

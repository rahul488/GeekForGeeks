/*

Given a collection of integers that might contain duplicates, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: [1,2,2]
Output:
[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

*/

class Solution {
     List<List<Integer>> res=new ArrayList<>();
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        Arrays.sort(nums);
        find(nums,new ArrayList<Integer>(),0);
        return res;
        
    }
    public void find(int[] nums,List<Integer> list,int idx){
        res.add(new ArrayList<>(list));
        for(int i=idx;i<nums.length;i++){
            if(i > idx && nums[i] == nums[i-1]) continue;
            list.add(nums[i]);
            find(nums,list,i+1);
            list.remove(list.size()-1);
        }
    }
}

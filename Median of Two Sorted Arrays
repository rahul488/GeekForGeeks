/*

There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.

Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

*/

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        
        int n=nums1.length+nums2.length;
        int mid=n/2+1;
        int ar[]=new int[mid];
        int i=0,j=0,k=0;
        while(k < mid && (i < nums1.length || j < nums2.length))
        {
            if(i == nums1.length)
            {
                ar[k]=nums2[j];
                j++;
            }
            else if(j == nums2.length)
            {
                ar[k]=nums1[i];
                i++;
            }
            else if(nums1[i] < nums2[j])
            {
                ar[k]=nums1[i];
                i++;
            }
            else 
            {
                ar[k]=nums2[j];
                j++;
            }
            k++;
        }
        k--;
        return (n%2 == 0)?Double.valueOf((ar[k]+ar[(k-1)])/2.0):Double.valueOf(ar[k]);
    }
}

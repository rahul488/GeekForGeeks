/*

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

*/

class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        int ar[]=new int[2];
        
        if(nums.length == 0)
            return ar;
        Map<Integer,Integer> hs=new HashMap<>();
        for(int i=0;i<nums.length;i++)
        {
           int sum=target-nums[i];
           if(!hs.containsKey(sum))
           {
               hs.put(nums[i],i);
           }
           else
           {
                ar[0]=hs.get(sum);
               ar[1]=i;
           }
        }
        return ar;
    }
}
